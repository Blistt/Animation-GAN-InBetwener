DiscriminatorFullSpectral(
  (conv_blocks): Sequential(
    (0): Conv2d(1, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (1): LeakyReLU(negative_slope=0.2, inplace=True)
    (2): Dropout2d(p=0.25, inplace=False)
    (3): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (4): LeakyReLU(negative_slope=0.2, inplace=True)
    (5): Dropout2d(p=0.25, inplace=False)
    (6): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (7): LeakyReLU(negative_slope=0.2, inplace=True)
    (8): Dropout2d(p=0.25, inplace=False)
    (9): Conv2d(256, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (10): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (11): LeakyReLU(negative_slope=0.2, inplace=True)
    (12): Dropout2d(p=0.25, inplace=False)
    (13): Conv2d(512, 1024, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (14): LeakyReLU(negative_slope=0.2, inplace=True)
    (15): Dropout2d(p=0.25, inplace=False)
    (16): Conv2d(1024, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (17): LeakyReLU(negative_slope=0.2, inplace=True)
    (18): Dropout2d(p=0.25, inplace=False)
    (19): Conv2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (20): LeakyReLU(negative_slope=0.2, inplace=True)
    (21): Dropout2d(p=0.25, inplace=False)
    (22): Conv2d(512, 1, kernel_size=(4, 4), stride=(1, 1), bias=False)
  )
)
