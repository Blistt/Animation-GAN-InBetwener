('tra_dataset', <dataset_class.MyDataset object at 0x7f2097c53510>)
('gen', UNetCrop(
  (upfeature): FeatureMapBlock(
    (conv): Conv2d(2, 64, kernel_size=(1, 1), stride=(1, 1))
  )
  (contract1): ContractingBlock(
    (conv1): Conv2d(64, 128, kernel_size=(3, 3), stride=(1, 1))
    (conv2): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1))
    (activation): Sine()
    (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (contract2): ContractingBlock(
    (conv1): Conv2d(128, 256, kernel_size=(3, 3), stride=(1, 1))
    (conv2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1))
    (activation): Sine()
    (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (contract3): ContractingBlock(
    (conv1): Conv2d(256, 512, kernel_size=(3, 3), stride=(1, 1))
    (conv2): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1))
    (activation): Sine()
    (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (contract4): ContractingBlock(
    (conv1): Conv2d(512, 1024, kernel_size=(3, 3), stride=(1, 1))
    (conv2): Conv2d(1024, 1024, kernel_size=(3, 3), stride=(1, 1))
    (activation): Sine()
    (maxpool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)
  )
  (expand1): ExpandingBlock(
    (upsample): Upsample(scale_factor=2.0, mode='bilinear')
    (conv1): Conv2d(1024, 512, kernel_size=(2, 2), stride=(1, 1))
    (conv2): Conv2d(1024, 512, kernel_size=(3, 3), stride=(1, 1))
    (conv3): Conv2d(512, 512, kernel_size=(3, 3), stride=(1, 1))
    (activation): Sine()
  )
  (expand2): ExpandingBlock(
    (upsample): Upsample(scale_factor=2.0, mode='bilinear')
    (conv1): Conv2d(512, 256, kernel_size=(2, 2), stride=(1, 1))
    (conv2): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1))
    (conv3): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1))
    (activation): Sine()
  )
  (expand3): ExpandingBlock(
    (upsample): Upsample(scale_factor=2.0, mode='bilinear')
    (conv1): Conv2d(256, 128, kernel_size=(2, 2), stride=(1, 1))
    (conv2): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1))
    (conv3): Conv2d(128, 128, kernel_size=(3, 3), stride=(1, 1))
    (activation): Sine()
  )
  (expand4): ExpandingBlock(
    (upsample): Upsample(scale_factor=2.0, mode='bilinear')
    (conv1): Conv2d(128, 64, kernel_size=(2, 2), stride=(1, 1))
    (conv2): Conv2d(128, 64, kernel_size=(3, 3), stride=(1, 1))
    (conv3): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1))
    (activation): Sine()
  )
  (downfeature): FeatureMapBlock(
    (conv): Conv2d(64, 1, kernel_size=(1, 1), stride=(1, 1))
  )
  (activation): Sine()
))
('disc', DiscriminatorCrop(
  (conv_blocks): Sequential(
    (0): Conv2d(1, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (1): Sine()
    (2): Dropout2d(p=0.25, inplace=False)
    (3): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): Sine()
    (6): Dropout2d(p=0.25, inplace=False)
    (7): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (8): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): Sine()
    (10): Dropout2d(p=0.25, inplace=False)
    (11): Conv2d(256, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (12): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): Sine()
    (14): Dropout2d(p=0.25, inplace=False)
    (15): Conv2d(512, 1024, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (16): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (17): Sine()
    (18): Dropout2d(p=0.25, inplace=False)
    (19): Conv2d(1024, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (20): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (21): Sine()
    (22): Dropout2d(p=0.25, inplace=False)
    (23): Conv2d(512, 1, kernel_size=(4, 4), stride=(2, 2), bias=False)
  )
))
('gen_opt', Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.0002
    maximize: False
    weight_decay: 0
))
('disc_opt', Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.0002
    maximize: False
    weight_decay: 0
))
('adv_l', BCEWithLogitsLoss())
('adv_lambda', 0.05)
('r1', L1Loss())
('lambr1', 1.0)
('r2', GDL())
('r3', MS_SSIM())
('lambr2', 1.0)
('lambr3', 5.0)
('n_epochs', 4)
('batch_size', 8)
('device', 'cuda:1')
('metrics', MetricCollection(
  (chamfer): ChamferDistance2dMetric()
  (mse): MeanSquaredError()
  (psnr): PSNRMetricCPU()
  (ssim): SSIMMetricCPU()
))
('display_step', 10)
('plot_step', 1)
('test_dataset', <dataset_class.MyDataset object at 0x7f2097c51350>)
('my_dataset', <dataset_class.MyDataset object at 0x7f207e4d5010>)
('save_checkpoints', False)
('disc_extra', 0)
('gen_extra', 0)
('experiment_dir', 'exp_crop_base_steps_siren/')
('f', <_io.TextIOWrapper name='exp_crop_base_steps_siren/parameters.txt' mode='w' encoding='UTF-8'>)
