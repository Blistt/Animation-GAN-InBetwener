('tra_dataset', <dataset_class.MyDataset object at 0x7f7a22489dd0>)
('gen', GeneratorLight(
  (down_sample_blocks): Sequential(
    (0): Conv2d(2, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (1): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Sine()
    (3): Conv2d(128, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): Sine()
    (6): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (7): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Sine()
    (9): Conv2d(256, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (10): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (11): Sine()
  )
  (up_sample_block): Sequential(
    (0): ConvTranspose2d(512, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (1): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (2): Sine()
    (3): ConvTranspose2d(256, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): Sine()
    (6): ConvTranspose2d(128, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (7): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (8): Sine()
    (9): ConvTranspose2d(64, 1, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
    (10): Sigmoid()
  )
))
('disc', DiscriminatorFull(
  (conv_blocks): Sequential(
    (0): Conv2d(1, 64, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (1): Sine()
    (2): Dropout2d(p=0.25, inplace=False)
    (3): Conv2d(64, 128, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (4): BatchNorm2d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (5): Sine()
    (6): Dropout2d(p=0.25, inplace=False)
    (7): Conv2d(128, 256, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (8): BatchNorm2d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (9): Sine()
    (10): Dropout2d(p=0.25, inplace=False)
    (11): Conv2d(256, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (12): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (13): Sine()
    (14): Dropout2d(p=0.25, inplace=False)
    (15): Conv2d(512, 1024, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (16): BatchNorm2d(1024, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (17): Sine()
    (18): Dropout2d(p=0.25, inplace=False)
    (19): Conv2d(1024, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (20): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (21): Sine()
    (22): Dropout2d(p=0.25, inplace=False)
    (23): Conv2d(512, 512, kernel_size=(4, 4), stride=(2, 2), padding=(1, 1), bias=False)
    (24): BatchNorm2d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    (25): Sine()
    (26): Dropout2d(p=0.25, inplace=False)
    (27): Conv2d(512, 1, kernel_size=(4, 4), stride=(1, 1), bias=False)
    (28): Sine()
  )
))
('gen_opt', Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.0002
    maximize: False
    weight_decay: 0
))
('disc_opt', Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    capturable: False
    differentiable: False
    eps: 1e-08
    foreach: None
    fused: None
    lr: 0.0002
    maximize: False
    weight_decay: 0
))
('adv_l', BCEWithLogitsLoss())
('adv_lambda', 0.05)
('r1', L1Loss())
('lambr1', 1.0)
('r2', GDL())
('r3', MS_SSIM())
('lambr2', 1.0)
('lambr3', 5.0)
('n_epochs', 40)
('batch_size', 12)
('device', 'cuda:1')
('metrics', MetricCollection(
  (chamfer): ChamferDistance2dMetric()
  (mse): MeanSquaredError()
  (psnr): PSNRMetricCPU()
  (ssim): SSIMMetricCPU()
))
('display_step', 10)
('plot_step', 1)
('test_dataset', <dataset_class.MyDataset object at 0x7f7a39f81e90>)
('my_dataset', <dataset_class.MyDataset object at 0x7f7a3a0ceb90>)
('save_checkpoints', False)
('disc_extra', 0)
('gen_extra', 0)
('experiment_dir', 'exp_light_base_steps_3/')
('f', <_io.TextIOWrapper name='exp_light_base_steps_3/parameters.txt' mode='w' encoding='UTF-8'>)
